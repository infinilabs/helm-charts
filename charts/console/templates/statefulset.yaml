apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "console.fullname" . }}
  labels:
    {{- include "console.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "console.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "console.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "console.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "console.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-{{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ['sh', '-c', 'if [ ! -e /config_bak/certs ]; then cp -rf /config/* /config_bak; else exit 0; fi']
          volumeMounts:
            - name: console-config
              mountPath: /config_bak
            - name: console-config-security
              mountPath: /config/security.yml
              subPath: security.yml
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env.endpoint }}
          env:
            - name: INFINI_CONSOLE_ENDPOINT
              value: {{ .Values.env.endpoint }}
          {{- end }}
          {{- if .Values.debug.enabled }}
          command: {{ .Values.debug.command }}
          args: {{ .Values.debug.args }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - name: console-data
              mountPath: /data
            - name: console-config
              mountPath: /config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: console-data
          emptyDir: {}
        - name: console-config
          emptyDir: {}
        - name: console-config-security
          configMap:
            name: {{ include "console.fullname" . }}-security-yml
            items: 
              - key: security.yml
                path: security.yml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: console-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.dataVolumeStorage }}
    - metadata:
        name: console-config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storageClassName }}
        resources:
          requests:
            storage: 1Gi
